using System;
using System.Collections.Generic;
using System.Text;
using BryantBrothers.WindCave.WindCave.Enums;
using BryantBrothers.WindCave.WindCave.PxPost.Enums;

namespace BryantBrothers.WindCave.WindCave.PxPost.Models
{
	/// <summary>
	/// Details for PxPost transaction
	/// </summary>
	public class PxPostTransaction
	{
		/// <summary>
		/// Required (Max 99999999).
		/// The Amount in cents for the transaction.
		/// </summary>
		public int Amount { get; set; }

		/// <summary>
		/// Optional (Max 64 chars).
		/// Card holder's name.
		/// </summary>
		public string CardHolderName { get; set; }

		/// <summary>
		/// Optional (Max 20 chars).
		/// Card number.
		/// </summary>
		public string CardNumber { get; set; }

		/// <summary>
		/// Optional.
		/// Allows the Client type to be passed through at the transaction time.
		/// </summary>
		public ClientType? ClientType { get; set; }

		/// <summary>
		/// Optional (Max 32 chars).
		/// Needs to be generated to add a card for recurring billing and sent again when rebilling transactions.
		/// </summary>
		public string BillingId { get; set; }

		/// <summary>
		/// Optional (Max 4 chars).
		/// Card Verification number.
		/// This number is found on the back of a credit card in the signature panel - it is different from the embossed card number and provides an additional safety check.
		/// </summary>
		public string Cvc2 { get; set; }

		/// <summary>
		/// Optional.
		/// This field is used as a CVC presence indicator.
		/// It is provided by the card acceptor to indicate availability of the CVC value on the card.
		/// </summary>
		public Cvc2Presence? Cvc2Presence { get; set; }

		/// <summary>
		/// Optional (Max 4 chars). 
		/// Expiry Date on Card.  Should be in format "MMYY".
		/// </summary>
		public string DateExpiry { get; set; }

		/// <summary>
		/// Optional (Max 16 chars).
		/// The BillingId generated by Windcave when adding a card for recurring billing.
		/// Needed for rebilling transactions when you don't use your own BillingId.
		/// </summary>
		public string DpsBillingId { get; set; }

		/// <summary>
		/// Optional (Max 16 chars).
		/// Output from an original transaction request.
		/// Is a required field to do second stage transactions like Refund and Complete.
		/// </summary>
		public string DpsTxnRef { get; set; }

		/// <summary>
		/// Optional.
		/// Needed for recurring billing transactions when adding a card to the Windcave system.Set element to 1 for true and 0 for false.
		/// </summary>
		public bool? EnableAddBillCard { get; set; }

		/// <summary>
		/// Required.
		/// You will need to specify a three-character currency code here.
		/// </summary>
		public WindCaveCurrency InputCurrency { get; set; }

		/// <summary>
		/// Optional (Max 64 chars).
		/// Reference to Appear on Transaction Reports Max 64 Characters.
		/// </summary>
		public string MerchantReference { get; set; }

		/// <summary>
		/// Required (Max 32 chars). 
		/// Username of Windcave account.
		/// </summary>
		public string PostUsername { get; set; }

		/// <summary>
		/// Required (Max 32 chars). 
		/// Password of Windcave account.
		/// </summary>
		public string PostPassword { get; set; }

		/// <summary>
		/// Optional (Max 64 chars).
		/// Store a card holder or customer's email address on the transaction details.
		/// It will be returned in the transaction response. The API account can be configured by PX Support to send out a transaction confirmation email automatically.
		/// </summary>
		public string ReceiptEmail { get; set; }

		/// <summary>
		/// Optional.
		/// Set specific string value required to specify the card storage reason when tokenising and rebilling a card with a token.
		/// The string value depends on the business case when tokenising and rebilling a card. 
		/// </summary>
		public RecurringMode? RecurringMode { get; set; }

		/// <summary>
		/// Required.
		/// Type of transaction, e.g. 'Purchase' 'Auth' 'Complete' 'Refund' 'Validate'.
		/// </summary>
		public TransactionType TxnType { get; set; }

		/// <summary>
		/// Optional (Max 255 chars).
		/// Free Text field 1
		/// </summary>
		public string TxnData1 { get; set; }

		/// <summary>
		/// Optional (Max 255 chars).
		/// Free Text field 2
		/// </summary>
		public string TxnData2 { get; set; }

		/// <summary>
		/// Optional (Max 255 chars).
		/// Free Text field 3
		/// </summary>
		public string TxnData3 { get; set; }

		/// <summary>
		/// Optional (Max 16 chars).
		/// Used for checking the status of a transaction.
		/// </summary>
		public string TxnId { get; set; }

		/// <summary>
		/// Optional.
		/// Address Verification System property. Values are 1 (Enable Verification) / 0 (Disable Verification).
		/// </summary>
		public bool? EnableAvsData { get; set; }

		/// <summary>
		/// Optional.
		/// Address Verification System property.
		/// Values are 0,1, 2, 3 or 4. 
		/// </summary>
		public AvsAction? AvsAction { get; set; }

		/// <summary>
		/// Optional (Max 20 chars).
		/// Address Verification System property. 
		/// Post Code that is listed on the customer's bank statement.
		/// </summary>
		public string AvsPostCode { get; set; }

		/// <summary>
		/// Optional (Max 60 chars).
		/// Address Verification System property. 
		/// Address that is listed on the customer's bank statement.
		/// </summary>
		public string AvsStreetAddress { get; set; }

		/// <summary>
		/// Optional (Max 4 chars, format "MMYY").
		/// The Issue date of the customer's credit card if Issuer requires this field to be present.
		/// </summary>
		public string DateStart { get; set; }

		/// <summary>
		/// Optional. 
		/// The Issue Number of your credit card if Issuer requires this field to be present.
		/// </summary>
		public int? IssueNumber { get; set; }

		/// <summary>
		/// Optional (Max 37 chars).
		/// Extracted from Track2 of credit card.
		/// </summary>
		public string Track2 { get; set; }	
	}
}

